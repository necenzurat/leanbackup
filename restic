#!/bin/bash
#
# ./restic - the init 
#
# @version  0.1.0
# @date     2019-01-09
# @license  DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE

startTime=`date +%s`

# path
location="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

enableLock="false"

#$source ${location}/kernel/menu.sh

source ${location}/kernel/header.sh


startMinute=$(date +"%M")
startHour=$(date +"%H")

selectedRepo=$1
repository () {
    for repo in $(ls ${location}/backups/); do
        if [[ "$repo" == "$selectedRepo" ]]; then
            echo "loading .env $repo..."
            set -o allexport
            include ${location}/backups/$repo/.env
            set +o allexport
            echo "command is restic $@"
            restic $@

        # else 
        #     red "Repository $repo does not exist"
        fi
    done

}

#     if [[ "$repository" == "all" ]]; then
#         for repository in $(ls ${location}/backups/); do
#             set -o allexport
#             include ${location}/backups/$repository/.env
#             set +o allexport
#             echo "executing $1 on $repository ..."
#             echo $1 $2 $3
#         done
#     fi 
# shift

repoStats (){
    restic stats
    echo -e "\n\n"
    restic stats --mode raw-data
    echo "========================================"
}

repoSnapshots (){
    restic snapshots
    echo "\n========================================"
}

# echo $1
# exit 1;

while test $# -gt 0; do
    case "$1" in
        -h|--help)
            echo "restic - env preloader and helper"
            echo " "
            echo "./restic [repo] commands [arguments]"
            echo " "
            echo "options:"
            echo "stats                     both stats"
            echo "-o, --output-dir=DIR      specify a directory to store output in"
            echo "-h, --help                show brief help"
            exit 0
            ;;
        -s|--stats)
            shift
            repository repoStats
            shift
            ;;
        -snap|--snapshots)
            shift
            repository repoSnapshots
            shift
            ;;
        *)
            #echo "got to * now executing restic $@"
            shift
            repository $@
            
            # shift
            # repository $@ 

            # exit 1;
            # shift
            
            #restic $@
            break
            ;;
    esac
done
